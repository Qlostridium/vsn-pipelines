nextflow.preview.dsl=2

def extractSampleFromH5(path) {
    // Allow to detect data generated by CellRanger prior and post to version 3.
    (full, parentDir, id, filename) = (path =~ /(.+)\/(.+)\/outs\/(.+)\.h5/)[0]
    return id
}

workflow getH5Channel {

    take:
        glob

    main:
        // Check whether multiple globs are provided
        if(glob.contains(',')) {
            glob = Arrays.asList(glob.split(',')); 
        }
        channel = Channel
            .fromPath(glob, type: 'file', checkIfExists: true)
            .map {
                filePath -> tuple(extractSampleFromH5( "${filePath}" ), file("${filePath}"))
            }

    emit:
        channel

}

def extractSampleFromMEX(path) {
    // Allow to detect data generated by CellRanger prior and post to version 3.
    (full, parentDir, id) = (path =~ /(.+)\/(.+)\/outs/)[0]
    return id
}

workflow getMEXChannel {

    take:
        glob

    main:
        // Check whether multiple globs are provided
        if(glob.contains(',')) {
            glob = Arrays.asList(glob.split(',')); 
        }
        channel = Channel
            .fromPath(glob, type: 'dir', checkIfExists: true)
            .map {
                filePath -> tuple(extractSampleFromMEX( "${filePath}" ), file("${filePath}"))
            }

    emit:
        channel

}
